{"version":3,"sources":["components/Element.js","redux/actionTypes.js","redux/actions/index.js","containers/Categories.js","components/CategoryFilter.js","containers/Home.js","containers/Stats.js","imgs/logo.png","components/Navbar.js","components/App.js","redux/reducers/pokemons.js","redux/reducers/profile.js","redux/reducers/filter.js","redux/reducers/index.js","index.js"],"names":["Element","num","name","img","to","className","src","alt","GET_POKEMON","ALL_POKEMONS","RESTART_PROFILE","CHANGE_FILTER","getPokemon","data","type","payload","categories","CategoryFilter","categoryFilterChange","onChange","e","target","value","map","cat","mapDistpachToProps","restartProfile","getPokemons","dispatch","a","fetch","response","json","results","pokemon","index","url","dataOne","i","types","length","type1","type2","changeFilter","category","connect","state","profile","pokemons","filter","console","log","status","list","mapDispatchToProps","getProfile","id","useParams","height","Math","round","weight","Navbar","logo","App","path","component","Home","exact","Stats","initialState","count","next","previous","setTrue","obj1","action","rootReducer","combineReducers","pokemonsReducer","profileReducer","filterReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.d4d7e5b7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Element = ({ num, name, img }) => (\n  <Link to={`/react-catalogue/pokemonid/${num}`} className=\"col-10 col-sm-3 col-md-2 div-element a-element\">\n    <img src={img} alt=\"abc\" className=\"list-img img-fluid\" />\n    <div className=\"row\">\n      <h6 className=\"list-name\">{name}</h6>\n    </div>\n  </Link>\n);\n\nElement.propTypes = {\n  num: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n};\n\nexport default Element;\n","export const GET_POKEMON = 'GET_POKEMON';\nexport const LIST_POKEMON = 'LIST_POKEMON';\nexport const ADD_POKEMON = 'ADD_POKEMON';\nexport const ALL_POKEMONS = 'ALL_POKEMONS';\nexport const RESTART_PROFILE = 'RESTART_PROFILE';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\n","import {\n  ALL_POKEMONS,\n  GET_POKEMON,\n  RESTART_PROFILE,\n  CHANGE_FILTER,\n} from '../actionTypes';\n\nexport const allPokemons = (all) => ({ type: ALL_POKEMONS, payload: all });\nexport const getPokemon = (data) => ({ type: GET_POKEMON, payload: data });\nexport const restartProfile = () => ({ type: RESTART_PROFILE });\n\nexport const getPokemons = () => async (dispatch) => {\n  try {\n    const url = 'https://pokeapi.co/api/v2/pokemon?limit=151';\n    const response = await fetch(url);\n    const data = await response.json();\n    // const list = [];\n    data.results.map(async (pokemon, index) => {\n      const response = await fetch(pokemon.url);\n      const dataOne = await response.json();\n      // console.log(dataOne.types[1].type.name);\n      // data.results[index].types = [];\n      for (let i = 0; i < dataOne.types.length; i += 1) {\n        // data.results[index].types.push(dataOne.types[i].type.name);\n        if (i === 0) { data.results[index].type1 = dataOne.types[i].type.name; }\n        if (i === 1) { data.results[index].type2 = dataOne.types[i].type.name; }\n      }\n      // data.results[index].types = dataOne.types;\n    });\n    dispatch(allPokemons(data));\n    return true;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getProfile = (id) => async (dispatch) => {\n  try {\n    const url = `https://pokeapi.co/api/v2/pokemon/${id}/`;\n    const response = await fetch(url);\n    const data = await response.json();\n    dispatch(getPokemon(data));\n    return true;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const changeFilter = (category) => ({\n  type: CHANGE_FILTER,\n  payload: category,\n});\n","const categories = [\n  'fire',\n  'water',\n  'insect',\n  'poison',\n];\n\nexport default categories;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport categories from '../containers/Categories';\n\nconst CategoryFilter = ({ categoryFilterChange }) => {\n  const handleChange = (e) => {\n    categoryFilterChange(e.target.value);\n  };\n  return (\n    <select className=\"form-control mt-2\" onChange={handleChange}>\n      <option key=\"default\" value=\"All\">All books</option>\n      {\n        categories.map((cat) => <option key={cat} value={cat}>{cat}</option>)\n      }\n    </select>\n  );\n};\n\nCategoryFilter.propTypes = {\n  categoryFilterChange: PropTypes.func.isRequired,\n};\n\nexport default CategoryFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Element from '../components/Element';\nimport { restartProfile, getPokemons, changeFilter } from '../redux/actions';\nimport CategoryFilter from '../components/CategoryFilter';\n\nconst Home = ({\n  profile,\n  restartProfile,\n  pokemons,\n  getPokemons,\n  filter,\n  changeFilter,\n}) => {\n  const changeF = (type) => {\n    changeFilter(type);\n  };\n  console.log(filter);\n  if (profile.status === true) {\n    restartProfile();\n  }\n  let list = [];\n  if (pokemons.status === false) {\n    getPokemons();\n  } else {\n    list = pokemons.results;\n    console.log(list);\n    console.log(list[0]);\n    console.log(list[0].type1);\n    if (filter !== 'All') {\n      // pkmns.results.map((pkmn) => (if (pkmn.type) { list.push(pkmn) }));\n      console.log('Enter diff All');\n      /* pokemons.results.map((pk) => (\n        if (pk.types)\n      )); */\n      /* for (let i = 0; i < list.length; i += 1) {\n        console.log(pokemons.results[i].type1);\n        if (filter === pokemons.results[i].type1 || filter === pokemons.results[i].type2) {\n          list.push(pokemons.results[i]);\n        }\n      } */\n    }\n  }\n  return (\n    <>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-4\">\n          <CategoryFilter categoryFilterChange={changeF} />\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        {list.map((pokemon, index) => (\n          <Element\n            key={pokemon.name}\n            num={index + 1}\n            name={pokemon.name}\n            img={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-v/black-white/animated/${index + 1}.gif`}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nHome.propTypes = {\n  pokemons: PropTypes.shape({\n    results: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.object,\n    ]),\n    status: PropTypes.bool,\n  }).isRequired,\n  getPokemons: PropTypes.func.isRequired,\n  restartProfile: PropTypes.func.isRequired,\n  profile: PropTypes.shape({\n    status: PropTypes.bool,\n  }).isRequired,\n  filter: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  pokemons: state.pokemons,\n  filter: state.filter,\n});\n\nconst mapDistpachToProps = {\n  restartProfile,\n  getPokemons,\n  changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDistpachToProps)(Home);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../redux/actions';\n\nconst Stats = ({ profile, getProfile }) => {\n  const { id } = useParams();\n  let type1 = '';\n  let type2 = '';\n  let pokemon = '';\n  if (profile.status === false) {\n    pokemon = getProfile(id);\n  } else {\n    pokemon = profile;\n    type1 = pokemon.types[0].type.name;\n    if (pokemon.types[1]) {\n      type2 = pokemon.types[1].type.name;\n    } else {\n      type2 = '--';\n    }\n  }\n  let height = pokemon.height * 0.1;\n  height = Math.round(height * 10) / 10;\n  let weight = pokemon.weight * 0.1;\n  weight = Math.round(weight * 10) / 10;\n  const img = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-v/black-white/animated/${pokemon.id}.gif`;\n  return (\n    <>\n      <Link to=\"/react-catalogue/\"><i className=\"fas fa-caret-left fa-5x tri-stats\" /></Link>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-12 div-element-stats\">\n          <img src={img} alt={pokemon.name} className=\"list-img img-fluid img-stats\" />\n        </div>\n        <div className=\"col-12 d-flex justify-content-around align-items-center content-1\">\n          <p className=\"text-name\">{`#${pokemon.id} ${pokemon.name}`}</p>\n          <i className=\"fas fa-plus fa-5x\" />\n        </div>\n      </div>\n      <div className=\"row justify-content-center mt-4\">\n        <div className=\"col-12 d-flex justify-content-around align-items-center content-1\">\n          <p className=\"text-types\">\n            {`height: ${height}m`}\n            <br />\n            {`weight: ${weight}Kg`}\n          </p>\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-12 col-sm-6 d-flex justify-content-around align-items-center content-1\">\n          <p className=\"text-name\">{type1}</p>\n        </div>\n        <div className=\"col-12 col-sm-6 d-flex justify-content-around align-items-center content-1\">\n          <p className=\"text-name\">{type2}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nStats.propTypes = {\n  getProfile: PropTypes.func.isRequired,\n  profile: PropTypes.shape({\n    status: PropTypes.bool,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nconst mapDispatchToProps = {\n  getProfile,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stats);\n","export default __webpack_public_path__ + \"static/media/logo.beda6a95.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../imgs/logo.png';\n\nconst Navbar = () => (\n  <nav className=\"navbar row\">\n    <div className=\"col-12 col-sm-8\">\n      <Link to=\"/react-catalogue/\"><i className=\"far fa-circle fa-5x big-circle\" /></Link>\n      <i className=\"fas fa-circle red\" />\n      <i className=\"fas fa-circle green\" />\n      <i className=\"fas fa-circle yellow\" />\n    </div>\n    <div className=\"col-12 col-sm-4 d-flex justify-content-start justify-content-md-end\">\n      <img src={logo} alt=\"pokedex\" className=\"nav-img\" />\n    </div>\n    <div className=\"col-12\">\n      <hr className=\"hr\" />\n    </div>\n  </nav>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from '../containers/Home';\nimport Stats from '../containers/Stats';\nimport Navbar from './Navbar';\n\nconst App = () => (\n  <>\n    <Navbar />\n    <main>\n      <Switch>\n        <Route path=\"/react-catalogue/\" component={Home} exact />\n        <Route path=\"/react-catalogue/pokemonid/:id\" component={Stats} />\n      </Switch>\n    </main>\n  </>\n);\n\nexport default App;\n","import { ALL_POKEMONS } from '../actionTypes';\n\nconst initialState = {\n  count: 0,\n  next: 'https://pokeapi.co/api/v2/pokemon/?offset=20&limit=20',\n  previous: null,\n  results: [],\n  status: false,\n};\n\nconst setTrue = (obj1) => {\n  const t = {\n    ...obj1,\n    status: true,\n  };\n  return t;\n};\n\nconst pokemons = (state = initialState, action) => {\n  switch (action.type) {\n    case ALL_POKEMONS:\n      return setTrue(action.payload);\n    default:\n      return { ...state };\n  }\n};\n\nexport default pokemons;\n","import { GET_POKEMON, RESTART_PROFILE } from '../actionTypes';\n\nconst initialState = {\n  status: false,\n};\n\nconst setTrue = (obj1) => {\n  const t = {\n    ...obj1,\n    status: true,\n  };\n  return t;\n};\n\nconst profile = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_POKEMON:\n      return setTrue(action.payload);\n    case RESTART_PROFILE:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default profile;\n","import { CHANGE_FILTER } from '../actionTypes';\n\nconst filter = (state = 'All', action) => {\n  switch (action.type) {\n    case CHANGE_FILTER:\n      console.log('CHANGE_FILTER');\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default filter;\n","import { combineReducers } from 'redux';\n\nimport pokemonsReducer from './pokemons';\nimport profileReducer from './profile';\nimport filterReducer from './filter';\n\nconst rootReducer = combineReducers({\n  pokemons: pokemonsReducer,\n  profile: profileReducer,\n  filter: filterReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './components/App';\nimport rootReducer from './redux/reducers';\nimport './index.css';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunk)),\n);\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  rootElement,\n);\n"],"sourceRoot":""}