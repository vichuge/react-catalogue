{"version":3,"sources":["components/Element.js","redux/actionTypes.js","redux/actions/index.js","containers/Home.js","containers/Stats.js","components/Navbar.js","components/App.js","redux/reducers/pokemons.js","redux/reducers/profile.js","redux/reducers/index.js","index.js"],"names":["Element","num","name","img","to","className","src","alt","GET_POKEMON","ALL_POKEMONS","RESTART_PROFILE","getPokemon","data","type","payload","mapDistpachToProps","restartProfile","connect","state","pokemons","profile","status","list","results","map","pokemon","index","mapDispatchToProps","getProfile","id","dispatch","a","url","fetch","response","json","useParams","type1","type2","types","height","Math","round","weight","Navbar","App","path","component","Home","exact","Stats","initialState","count","next","previous","action","setTrue","obj1","rootReducer","combineReducers","pokemonsReducer","profileReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.4caff6b2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Element = ({ num, name, img }) => (\n  <Link to={`/react-catalogue/pokemonid/${num}`} className=\"col-10 col-sm-3 col-md-2 div-element a-element\">\n    <img src={img} alt=\"abc\" className=\"list-img img-fluid\" />\n    <div className=\"row\">\n      <h6 className=\"list-name\">{name}</h6>\n    </div>\n  </Link>\n);\n\nElement.propTypes = {\n  num: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n};\n\nexport default Element;\n","export const GET_POKEMON = 'GET_POKEMON';\nexport const LIST_POKEMON = 'LIST_POKEMON';\nexport const ADD_POKEMON = 'ADD_POKEMON';\nexport const ALL_POKEMONS = 'ALL_POKEMONS';\nexport const RESTART_PROFILE = 'RESTART_PROFILE';\n","import { ALL_POKEMONS, GET_POKEMON, RESTART_PROFILE } from '../actionTypes';\n\nexport const allPokemons = (all) => ({ type: ALL_POKEMONS, payload: all });\nexport const getPokemon = (data) => ({ type: GET_POKEMON, payload: data });\nexport const restartProfile = () => ({ type: RESTART_PROFILE });\n\nexport const getPokemons = () => async (dispatch) => {\n  try {\n    const url = 'https://pokeapi.co/api/v2/pokemon/';\n    const response = await fetch(url);\n    const data = await response.json();\n    dispatch(allPokemons(data));\n    return true;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getProfile = (id) => async (dispatch) => {\n  try {\n    const url = `https://pokeapi.co/api/v2/pokemon/${id}/`;\n    const response = await fetch(url);\n    const data = await response.json();\n    dispatch(getPokemon(data));\n    return true;\n  } catch (error) {\n    return error;\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Element from '../components/Element';\nimport { restartProfile } from '../redux/actions';\n\nconst Home = ({ profile, restartProfile, pokemons }) => {\n  if (profile.status === true) {\n    restartProfile();\n  }\n  const list = pokemons.results;\n  return (\n    <>\n      <div className=\"row\">\n        {list.map((pokemon, index) => (\n          <Element\n            key={pokemon.name}\n            num={index + 1}\n            name={pokemon.name}\n            img={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-v/black-white/animated/${index + 1}.gif`}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nHome.propTypes = {\n  pokemons: PropTypes.shape({\n    results: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.object,\n    ]),\n  }).isRequired,\n  restartProfile: PropTypes.func.isRequired,\n  profile: PropTypes.shape({\n    status: PropTypes.bool,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  pokemons: state.pokemons,\n  profile: state.profile,\n});\n\nconst mapDistpachToProps = {\n  restartProfile,\n};\n\nexport default connect(mapStateToProps, mapDistpachToProps)(Home);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getProfile } from '../redux/actions';\n\nconst Stats = ({ profile, getProfile }) => {\n  const { id } = useParams();\n  let type1 = '';\n  let type2 = '';\n  let pokemon = '';\n  if (profile.status === false) {\n    pokemon = getProfile(id);\n  } else {\n    pokemon = profile;\n    type1 = pokemon.types[0].type.name;\n    if (pokemon.types[1]) {\n      type2 = pokemon.types[1].type.name;\n    }\n  }\n  let height = pokemon.height * 0.1;\n  height = Math.round(height * 10) / 10;\n  let weight = pokemon.weight * 0.1;\n  weight = Math.round(weight * 10) / 10;\n  const img = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-v/black-white/animated/${pokemon.id}.gif`;\n  return (\n    <>\n      <Link to=\"/react-catalogue/\"><i className=\"fas fa-caret-left fa-5x tri-stats\" /></Link>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-12 div-element-stats\">\n          <img src={img} alt=\"abc\" className=\"list-img img-fluid img-stats\" />\n        </div>\n        <div className=\"col-12 d-flex justify-content-around align-items-center content-1\">\n          <p className=\"text-name\">{`#${pokemon.id} ${pokemon.name}`}</p>\n          <i className=\"fas fa-plus fa-5x\" />\n        </div>\n      </div>\n      <div className=\"row justify-content-center mt-4\">\n        <div className=\"col-12 d-flex justify-content-around align-items-center content-1\">\n          <p className=\"text-types\">\n            {`height: ${height}m`}\n            <br />\n            {`weight: ${weight}Kg`}\n          </p>\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-12 col-sm-6 d-flex justify-content-around align-items-center content-1\">\n          <p className=\"text-name\">{type1}</p>\n        </div>\n        <div className=\"col-12 col-sm-6 d-flex justify-content-around align-items-center content-1\">\n          <p className=\"text-name\">{type2}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nStats.propTypes = {\n  getProfile: PropTypes.func.isRequired,\n  profile: PropTypes.shape({\n    status: PropTypes.bool,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nconst mapDispatchToProps = {\n  getProfile,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stats);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => (\n  <div className=\"navbar row\">\n    <div className=\"col-12 mb-5\">\n      <Link to=\"/react-catalogue/\"><i className=\"far fa-circle fa-5x big-circle\" /></Link>\n      <i className=\"fas fa-circle red\" />\n      <i className=\"fas fa-circle green\" />\n      <i className=\"fas fa-circle yellow\" />\n    </div>\n    <hr className=\"hr\" />\n  </div>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from '../containers/Home';\nimport Stats from '../containers/Stats';\nimport Navbar from './Navbar';\n\nconst App = () => (\n  <>\n    <Navbar />\n    <main>\n      <Switch>\n        <Route path=\"/react-catalogue/\" component={Home} exact />\n        <Route path=\"/react-catalogue/pokemonid/:id\" component={Stats} />\n      </Switch>\n    </main>\n  </>\n);\n\nexport default App;\n","import { ALL_POKEMONS } from '../actionTypes';\n\nconst initialState = {\n  count: 0,\n  next: 'https://pokeapi.co/api/v2/pokemon/?offset=20&limit=20',\n  previous: null,\n  results: [],\n};\n\nconst pokemons = (state = initialState, action) => {\n  switch (action.type) {\n    case ALL_POKEMONS:\n      return action.payload;\n    default:\n      return { ...state };\n  }\n};\n\nexport default pokemons;\n","import { GET_POKEMON, RESTART_PROFILE } from '../actionTypes';\n\nconst initialState = {\n  status: false,\n};\n\nconst setTrue = (obj1) => {\n  const t = {\n    ...obj1,\n    status: true,\n  };\n  return t;\n};\n\nconst profile = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_POKEMON:\n      return setTrue(action.payload);\n    case RESTART_PROFILE:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default profile;\n","import { combineReducers } from 'redux';\n\nimport pokemonsReducer from './pokemons';\nimport profileReducer from './profile';\n\nconst rootReducer = combineReducers({\n  pokemons: pokemonsReducer,\n  profile: profileReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './components/App';\nimport rootReducer from './redux/reducers';\nimport './index.css';\nimport { getPokemons } from './redux/actions';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunk)),\n);\n\nstore.dispatch(getPokemons());\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  rootElement,\n);\n"],"sourceRoot":""}